{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","services/getDataFromApi.js","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","characters","results","catch","error","console","log","Header","className","src","logo","alt","Filters","props","type","placeholder","value","search","onChange","ev","handleSearch","target","CharacterCard","character","id","image","name","species","route","to","CharacterList","length","map","key","propTypes","PropTypes","array","CharacterDetail","origin","episode","status","Fragment","App","state","renderCharacterDetail","bind","setState","data","this","filter","toLowerCase","includes","routeId","parseInt","match","params","find","item","undefined","exact","path","filterCharactersBySearch","render","React","Component","number","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1ca80615.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).75509f2e.png\";","const getDataFromApi = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then(response => response.json())\n    .then(characters => characters.results)\n    .catch(error => console.log(error));\n};\n\nexport default getDataFromApi;\n","import React from \"react\";\nimport logo from \"../images/Rick_and_Morty_-_logo_(English).png\";\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <img src={logo} alt=\"Titulo de la serie\" className=\"HeaderImg\" />\n    </header>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filters(props) {\n  function handleSearch(ev) {\n    props.handleSearch(ev.target.value);\n  }\n  return (\n    <form className=\"filterForm\">\n      <label className=\"col-form-label\">Â¿A quiÃ©n buscas?</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"ej. rick\"\n        value={props.search}\n        onChange={handleSearch}\n      />\n    </form>\n  );\n}\nexport default Filters;\n\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterCard(props) {\n  const { id, image, name, species } = props.character;\n  const route = `/character/${id}`;\n\n  return (\n    <Link to={route} className=\"linkElement\">\n      <div className=\"CharacterCard\">\n        <div className=\"card text-white bg-danger mb-3\">\n          <div className=\"card-body\">\n            <img src={image} alt=\"\" />\n            <div className=\"card-header\">{name}</div>\n            <p className=\"card-text\">{species}</p>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\nexport default CharacterCard;\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string\n};\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterList(props) {\n  return (\n    <div className=\"CharacterList\">\n      {props.characters.length === 0 ? (\n        <p>Personaje no encontrado ðŸ¤·</p>\n      ) : (\n        <ul className=\"CharacterList-ul\">\n          {props.characters.map(character => {\n            return (\n              <li key={character.id} className=\"liElement\">\n                <CharacterCard key={character.id} character={character} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default CharacterList;\n\nCharacterCard.propTypes = {\n  characters: PropTypes.array\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterDetail(props) {\n  const { image, name, species, origin, episode, status } = props.character;\n\n  return (\n    <React.Fragment>\n      <div className=\"CharacterDetail\">\n        <div className=\"card text-white bg-danger mb-3\">\n          <div className=\"card-body\">\n            <img src={image} alt=\"\" />\n            <h3 className=\"card-title\">{name}</h3>\n            {status === \"Alive\" ? (\n              <i className=\"fas fa-heartbeat\"></i>\n            ) : status === \"Dead\" ? (\n              <i className=\"fas fa-skull\"></i>\n            ) : status === \"unknown\" ? (\n              <i className=\"fas fa-question-circle\"></i>\n            ) : (\n              false\n            )}\n            <span> / </span>\n            {species === \"Human\" ? (\n              <i className=\"fas fa-male\"></i>\n            ) : (\n              <i className=\"fab fa-reddit-alien\"></i>\n            )}\n          </div>\n          <p className=\"card-text\">Species: {species}</p>\n          <p className=\"card-text\">Planet: {origin.name}</p>\n          <p className=\"card-text\">Episodes: {episode.length}</p>\n          <p className=\"card-text\">Status: {status}</p>\n        </div>\n      </div>\n      <Link to=\"/\">\n        <button type=\"button\" className=\"btn btn-outline-info\">\n          <i className=\"far fa-hand-point-left\"></i> Volver al listado\n        </button>\n      </Link>\n    </React.Fragment>\n  );\n}\nexport default CharacterDetail;\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  \"origin.name\": PropTypes.string,\n  \"episode.length\": PropTypes.number\n};\n","import React from \"react\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport \"../stylesheet/App.css\";\nimport \"../stylesheet/bootstrap.min.css\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      characters: []\n    };\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then(characters => {\n      this.setState({\n        characters: characters\n      });\n    });\n  }\n\n  // event\n  handleSearch(data) {\n    this.setState({\n      search: data\n    });\n  }\n\n  // helper\n  filterCharactersBySearch() {\n    return this.state.characters.filter(character => {\n      return character.name\n        .toLowerCase()\n        .includes(this.state.search.toLowerCase());\n    });\n  }\n\n  // render\n  renderCharacterDetail(props) {\n    const routeId = parseInt(props.match.params.id);\n    const character = this.state.characters.find(item => item.id === routeId);\n    if (character === undefined) {\n      return <p>Personaje no encontrado</p>;\n    } else {\n      return <CharacterDetail character={character} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Filters\n              handleSearch={this.handleSearch}\n              search={this.state.search}\n            />\n            <CharacterList characters={this.filterCharactersBySearch()} />\n          </Route>\n          <Route path=\"/character/:id\" render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nCharacterDetail.propTypes = {\n  \"match.params.id\": PropTypes.number\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}