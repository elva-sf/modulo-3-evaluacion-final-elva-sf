{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","services/getDataFromApi.js","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","characters","results","catch","error","console","log","Header","className","src","logo","alt","Filters","props","handleCheck","ev","handleSearch","species","target","value","Fragment","type","placeholder","search","onChange","name","id","checked","CharacterCard","character","image","route","to","CharacterList","length","map","key","propTypes","PropTypes","array","CharacterDetail","origin","episode","status","App","state","renderCharacterDetail","bind","setState","data","this","filter","toLowerCase","includes","routeId","parseInt","match","params","find","item","undefined","exact","path","filterCharactersBySearch","render","React","Component","number","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8ad9165d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).75509f2e.png\";","const getDataFromApi = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then(response => response.json())\n    .then(characters => characters.results)\n    .catch(error => console.log(error));\n};\n\nexport default getDataFromApi;\n","import React from \"react\";\nimport logo from \"../images/Rick_and_Morty_-_logo_(English).png\";\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <img src={logo} alt=\"Titulo de la serie\" className=\"HeaderImg\" />\n    </header>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Filters(props) {\n  console.log(props);\n  function handleSearch(ev) {\n    props.handleSearch({ search: ev.target.value });\n  }\n  function handleCheck(ev) {\n    props.handleSearch({ species: ev.target.value });\n  }\n  return (\n    <React.Fragment>\n      <form>\n        <div className=\"filterForm\">\n          <label className=\"col-form-label\">Â¿A quiÃ©n buscas?</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ej. rick\"\n            value={props.search}\n            onChange={handleSearch}\n          />\n        </div>\n        <label>Â¿Mejor filtrar por especie?</label>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"species\"\n            id=\"\"\n            value=\"Human\"\n            onChange={handleCheck}\n            checked={props.species === \"Human\" ? true : false}\n          />\n          <i className=\"fas fa-male\"></i>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"species\"\n            id=\"\"\n            value=\"Alien\"\n            onChange={handleCheck}\n            checked={props.species === \"Alien\" ? true : false}\n          />\n          <i className=\"fab fa-reddit-alien\"></i>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"species\"\n            id=\"\"\n            value=\"All\"\n            onChange={handleCheck}\n            checked={props.species === \"All\" ? true : false}\n          />\n          <label>Todas las especies</label>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\nexport default Filters;\n\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterCard(props) {\n  const { id, image, name, species } = props.character;\n  const route = `/character/${id}`;\n\n  return (\n    <Link to={route} className=\"linkElement\">\n      <div className=\"CharacterCard\">\n        <div className=\"card text-white bg-danger mb-3\">\n          <div className=\"card-body\">\n            <img src={image} alt=\"\" />\n            <div className=\"card-header\">{name}</div>\n            <p className=\"card-text\">{species}</p>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\nexport default CharacterCard;\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string\n};\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterList(props) {\n  return (\n    <div className=\"CharacterList\">\n      {props.characters.length === 0 ? (\n        <p>Personaje no encontrado ðŸ¤·</p>\n      ) : (\n        <ul className=\"CharacterList-ul\">\n          {props.characters.map(character => {\n            return (\n              <li key={character.id} className=\"liElement\">\n                <CharacterCard key={character.id} character={character} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default CharacterList;\n\nCharacterCard.propTypes = {\n  characters: PropTypes.array\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction CharacterDetail(props) {\n  const { image, name, species, origin, episode, status } = props.character;\n\n  return (\n    <React.Fragment>\n      <div className=\"CharacterDetail\">\n        <div className=\"card text-white bg-danger mb-3\">\n          <div className=\"card-body\">\n            <img src={image} alt=\"\" />\n            <h3 className=\"card-title\">{name}</h3>\n            {status === \"Alive\" ? (\n              <i className=\"fas fa-heartbeat\"></i>\n            ) : status === \"Dead\" ? (\n              <i className=\"fas fa-skull\"></i>\n            ) : status === \"unknown\" ? (\n              <i className=\"fas fa-question-circle\"></i>\n            ) : (\n              false\n            )}\n            <span> / </span>\n            {species === \"Human\" ? (\n              <i className=\"fas fa-male\"></i>\n            ) : (\n              <i className=\"fab fa-reddit-alien\"></i>\n            )}\n          </div>\n          <p className=\"card-text\">Species: {species}</p>\n          <p className=\"card-text\">Planet: {origin.name}</p>\n          <p className=\"card-text\">Episodes: {episode.length}</p>\n          <p className=\"card-text\">Status: {status}</p>\n        </div>\n      </div>\n      <Link to=\"/\">\n        <button type=\"button\" className=\"btn btn-outline-info\">\n          <i className=\"far fa-hand-point-left\"></i> Volver al listado\n        </button>\n      </Link>\n    </React.Fragment>\n  );\n}\nexport default CharacterDetail;\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  \"origin.name\": PropTypes.string,\n  \"episode.length\": PropTypes.number\n};\n","import React from \"react\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport \"../stylesheet/App.css\";\nimport \"../stylesheet/bootstrap.min.css\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      species: \"All\",\n      characters: []\n    };\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then(characters => {\n      this.setState({\n        characters: characters\n      });\n    });\n  }\n\n  // event\n  handleSearch(data) {\n    console.log(data);\n    this.setState(data);\n  }\n\n  // helper\n  filterCharactersBySearch() {\n    return this.state.characters\n      .filter(character => {\n        return character.name\n          .toLowerCase()\n          .includes(this.state.search.toLowerCase());\n      })\n      .filter(character => {\n        return (\n          character.species === this.state.species ||\n          \"All\" === this.state.species\n        );\n      });\n  }\n\n  // render\n  renderCharacterDetail(props) {\n    const routeId = parseInt(props.match.params.id);\n    const character = this.state.characters.find(item => item.id === routeId);\n    if (character === undefined) {\n      return <p>Personaje no encontrado</p>;\n    } else {\n      return <CharacterDetail character={character} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Filters\n              handleSearch={this.handleSearch}\n              search={this.state.search}\n              species={this.state.species}\n            />\n            <CharacterList characters={this.filterCharactersBySearch()} />\n          </Route>\n          <Route path=\"/character/:id\" render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nCharacterDetail.propTypes = {\n  \"match.params.id\": PropTypes.number\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}